// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/gaeanetwork/gaea-core/protos/user/services.proto

package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	PublicKey            string   `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	SecretPrivKey        string   `protobuf:"bytes,4,opt,name=secret_priv_key,json=secretPrivKey,proto3" json:"secret_priv_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterRequest) Reset()         { *m = RegisterRequest{} }
func (m *RegisterRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterRequest) ProtoMessage()    {}
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_96a6337b1dbd12d5, []int{0}
}
func (m *RegisterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterRequest.Unmarshal(m, b)
}
func (m *RegisterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterRequest.Merge(dst, src)
}
func (m *RegisterRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterRequest.Size(m)
}
func (m *RegisterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterRequest proto.InternalMessageInfo

func (m *RegisterRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *RegisterRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterRequest) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *RegisterRequest) GetSecretPrivKey() string {
	if m != nil {
		return m.SecretPrivKey
	}
	return ""
}

type RegisterResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterResponse) Reset()         { *m = RegisterResponse{} }
func (m *RegisterResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterResponse) ProtoMessage()    {}
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_96a6337b1dbd12d5, []int{1}
}
func (m *RegisterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterResponse.Unmarshal(m, b)
}
func (m *RegisterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterResponse.Marshal(b, m, deterministic)
}
func (dst *RegisterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterResponse.Merge(dst, src)
}
func (m *RegisterResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterResponse.Size(m)
}
func (m *RegisterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterResponse proto.InternalMessageInfo

func (m *RegisterResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type LoginRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_96a6337b1dbd12d5, []int{2}
}
func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (dst *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(dst, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LoginResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginResponse) Reset()         { *m = LoginResponse{} }
func (m *LoginResponse) String() string { return proto.CompactTextString(m) }
func (*LoginResponse) ProtoMessage()    {}
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_96a6337b1dbd12d5, []int{3}
}
func (m *LoginResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginResponse.Unmarshal(m, b)
}
func (m *LoginResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginResponse.Marshal(b, m, deterministic)
}
func (dst *LoginResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginResponse.Merge(dst, src)
}
func (m *LoginResponse) XXX_Size() int {
	return xxx_messageInfo_LoginResponse.Size(m)
}
func (m *LoginResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginResponse proto.InternalMessageInfo

func (m *LoginResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type GetUserByIDRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserByIDRequest) Reset()         { *m = GetUserByIDRequest{} }
func (m *GetUserByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetUserByIDRequest) ProtoMessage()    {}
func (*GetUserByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_96a6337b1dbd12d5, []int{4}
}
func (m *GetUserByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserByIDRequest.Unmarshal(m, b)
}
func (m *GetUserByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserByIDRequest.Marshal(b, m, deterministic)
}
func (dst *GetUserByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserByIDRequest.Merge(dst, src)
}
func (m *GetUserByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetUserByIDRequest.Size(m)
}
func (m *GetUserByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserByIDRequest proto.InternalMessageInfo

func (m *GetUserByIDRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetUserByIDResponse struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserByIDResponse) Reset()         { *m = GetUserByIDResponse{} }
func (m *GetUserByIDResponse) String() string { return proto.CompactTextString(m) }
func (*GetUserByIDResponse) ProtoMessage()    {}
func (*GetUserByIDResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_services_96a6337b1dbd12d5, []int{5}
}
func (m *GetUserByIDResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserByIDResponse.Unmarshal(m, b)
}
func (m *GetUserByIDResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserByIDResponse.Marshal(b, m, deterministic)
}
func (dst *GetUserByIDResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserByIDResponse.Merge(dst, src)
}
func (m *GetUserByIDResponse) XXX_Size() int {
	return xxx_messageInfo_GetUserByIDResponse.Size(m)
}
func (m *GetUserByIDResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserByIDResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserByIDResponse proto.InternalMessageInfo

func (m *GetUserByIDResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterRequest)(nil), "user.RegisterRequest")
	proto.RegisterType((*RegisterResponse)(nil), "user.RegisterResponse")
	proto.RegisterType((*LoginRequest)(nil), "user.LoginRequest")
	proto.RegisterType((*LoginResponse)(nil), "user.LoginResponse")
	proto.RegisterType((*GetUserByIDRequest)(nil), "user.GetUserByIDRequest")
	proto.RegisterType((*GetUserByIDResponse)(nil), "user.GetUserByIDResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
	Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error)
	GetUserByID(ctx context.Context, in *GetUserByIDRequest, opts ...grpc.CallOption) (*GetUserByIDResponse, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	out := new(RegisterResponse)
	err := c.cc.Invoke(ctx, "/user.UserService/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Login(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*LoginResponse, error) {
	out := new(LoginResponse)
	err := c.cc.Invoke(ctx, "/user.UserService/Login", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByID(ctx context.Context, in *GetUserByIDRequest, opts ...grpc.CallOption) (*GetUserByIDResponse, error) {
	out := new(GetUserByIDResponse)
	err := c.cc.Invoke(ctx, "/user.UserService/GetUserByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	Register(context.Context, *RegisterRequest) (*RegisterResponse, error)
	Login(context.Context, *LoginRequest) (*LoginResponse, error)
	GetUserByID(context.Context, *GetUserByIDRequest) (*GetUserByIDResponse, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Register(ctx, req.(*RegisterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Login_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Login(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/Login",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Login(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.UserService/GetUserByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByID(ctx, req.(*GetUserByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _UserService_Register_Handler,
		},
		{
			MethodName: "Login",
			Handler:    _UserService_Login_Handler,
		},
		{
			MethodName: "GetUserByID",
			Handler:    _UserService_GetUserByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/gaeanetwork/gaea-core/protos/user/services.proto",
}

func init() {
	proto.RegisterFile("github.com/gaeanetwork/gaea-core/protos/user/services.proto", fileDescriptor_services_96a6337b1dbd12d5)
}

var fileDescriptor_services_96a6337b1dbd12d5 = []byte{
	// 353 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xd1, 0x4a, 0xfb, 0x30,
	0x14, 0xc6, 0xe9, 0xff, 0x3f, 0xe7, 0x76, 0xe6, 0x98, 0x64, 0xa8, 0xb5, 0xa2, 0x48, 0x2f, 0xc4,
	0x9b, 0xad, 0x32, 0x11, 0x11, 0xef, 0x86, 0x30, 0xc6, 0x44, 0xa4, 0xe2, 0xf5, 0xe8, 0xba, 0x43,
	0x0d, 0x73, 0x4d, 0x4d, 0xd2, 0x8e, 0x3e, 0x86, 0x2f, 0xe4, 0xb3, 0x49, 0x92, 0x16, 0xb7, 0xe9,
	0xc5, 0xc4, 0x9b, 0xb1, 0xf3, 0x3b, 0x5f, 0xce, 0x77, 0xbe, 0xa4, 0x70, 0x1b, 0x51, 0xf9, 0x92,
	0x4e, 0xba, 0x21, 0x9b, 0x7b, 0x51, 0x80, 0x41, 0x8c, 0x72, 0xc1, 0xf8, 0x4c, 0xff, 0xef, 0x84,
	0x8c, 0xa3, 0x97, 0x70, 0x26, 0x99, 0xf0, 0x52, 0x81, 0xdc, 0x13, 0xc8, 0x33, 0x1a, 0xa2, 0xe8,
	0x6a, 0x48, 0x2a, 0x0a, 0x3a, 0xd7, 0xbf, 0x1a, 0xa1, 0x7e, 0xcc, 0x71, 0xf7, 0xdd, 0x82, 0x96,
	0x8f, 0x11, 0x15, 0x12, 0xb9, 0x8f, 0x6f, 0x29, 0x0a, 0x49, 0x8e, 0xa0, 0xae, 0x14, 0xe3, 0x38,
	0x98, 0xa3, 0x6d, 0x9d, 0x5a, 0xe7, 0x75, 0xbf, 0xa6, 0xc0, 0x43, 0x30, 0x47, 0xe2, 0x40, 0x2d,
	0x09, 0x84, 0x58, 0x30, 0x3e, 0xb5, 0xff, 0x99, 0x5e, 0x59, 0x93, 0x63, 0x80, 0x24, 0x9d, 0xbc,
	0xd2, 0x70, 0x3c, 0xc3, 0xdc, 0xfe, 0xaf, 0xbb, 0x75, 0x43, 0x46, 0x98, 0x93, 0x33, 0x68, 0x09,
	0x0c, 0x39, 0xca, 0x71, 0xc2, 0x69, 0xa6, 0x35, 0x15, 0xad, 0x69, 0x1a, 0xfc, 0xc8, 0x69, 0x36,
	0xc2, 0xdc, 0xed, 0xc1, 0xee, 0xd7, 0x4a, 0x22, 0x61, 0xb1, 0x40, 0x72, 0x02, 0x3a, 0xa8, 0x5e,
	0xa7, 0xd1, 0x83, 0xae, 0x8e, 0xf0, 0x2c, 0x90, 0xfb, 0x9a, 0xbb, 0x03, 0xd8, 0xb9, 0x67, 0x11,
	0x8d, 0xff, 0x9a, 0xc1, 0xf5, 0xa0, 0x59, 0x0c, 0xda, 0xd0, 0xb9, 0x03, 0x64, 0x80, 0x52, 0x81,
	0x7e, 0x3e, 0xbc, 0x2b, 0xfd, 0x0f, 0x60, 0x5b, 0xfb, 0xd3, 0x69, 0xe1, 0x5e, 0x55, 0xe5, 0x70,
	0xea, 0x5e, 0x41, 0x7b, 0x45, 0xbe, 0x99, 0x4b, 0xef, 0xc3, 0x82, 0x86, 0x2a, 0x9f, 0xcc, 0xeb,
	0x93, 0x1b, 0xa8, 0x95, 0x77, 0x44, 0xf6, 0x8c, 0x7a, 0xed, 0x19, 0x9d, 0xfd, 0x75, 0x5c, 0x58,
	0x5d, 0xc0, 0x96, 0x4e, 0x48, 0x88, 0x11, 0x2c, 0xdf, 0x9b, 0xd3, 0x5e, 0x61, 0xc5, 0x89, 0x3e,
	0x34, 0x96, 0x76, 0x26, 0xb6, 0xd1, 0x7c, 0x4f, 0xed, 0x1c, 0xfe, 0xd0, 0x31, 0x33, 0x26, 0x55,
	0xfd, 0xbd, 0x5d, 0x7e, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc2, 0x9b, 0x44, 0x6e, 0xed, 0x02, 0x00,
	0x00,
}
